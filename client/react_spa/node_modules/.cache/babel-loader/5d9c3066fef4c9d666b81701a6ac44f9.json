{"ast":null,"code":"import _classCallCheck from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Summary.js\";\nimport React, { Component } from \"react\";\n\nvar Summary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Summary, _Component);\n\n  function Summary(props) {\n    var _this;\n\n    _classCallCheck(this, Summary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Summary).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      invoiceItems: [],\n      transactionsItems: []\n    };\n    return _this;\n  }\n\n  _createClass(Summary, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Fetch transactionSummary\n      fetch('http://localhost:8080/invoiceSummary/1000').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          transactionsItems: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      }); // Get Invoice Summary\n\n      fetch('http://localhost:8080/invoiceSummary/1000').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          invoiceItems: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          invoiceItems = _this$state.invoiceItems,\n          transactionsItems = _this$state.transactionsItems;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, items.map(function (item) {\n          return React.createElement(\"li\", {\n            key: item.transactionId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \"Transaction ID : \", item.transactionId), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \"Transaction unique No. : \", item.transactionUniqueNo), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \"Transaction Date : \", item.transactionDate), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"Description : \", item.transactionDesc), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"Amount : \", item.transactionAmount));\n        }), items.map(function (item) {\n          return React.createElement(\"li\", {\n            key: item.transactionId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Transaction ID : \", item.transactionId), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \"Transaction unique No. : \", item.transactionUniqueNo), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \"Transaction Date : \", item.transactionDate), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Description : \", item.transactionDesc), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \"Amount : \", item.transactionAmount));\n        }));\n      }\n    }\n  }]);\n\n  return Summary;\n}(Component);\n\nexport default Summary;","map":{"version":3,"sources":["/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Summary.js"],"names":["React","Component","Summary","props","state","error","isLoaded","invoiceItems","transactionsItems","fetch","then","res","json","result","setState","message","items","map","item","transactionId","transactionUniqueNo","transactionDate","transactionDesc","transactionAmount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n \nclass Summary extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      invoiceItems: [],\n      transactionsItems: []\n    };\n  }\n\n  componentDidMount() {\n    // Fetch transactionSummary\n    fetch('http://localhost:8080/invoiceSummary/1000')\n        .then(res => res.json())\n        .then(\n            result => {\n              this.setState({\n                isLoaded: true,\n                transactionsItems: result\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n        );\n\n    // Get Invoice Summary\n    fetch('http://localhost:8080/invoiceSummary/1000')\n        .then(res => res.json())\n        .then(\n            result => {\n              this.setState({\n                isLoaded: true,\n                invoiceItems: result\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n        );\n\n\n  }\n\n  render() {\n    const { error, isLoaded, invoiceItems, transactionsItems } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n          <ul>\n            {items.map(item => (\n                <li key={item.transactionId}>\n                  <ul>Transaction ID : {item.transactionId}</ul>\n                  <ul>Transaction unique No. : {item.transactionUniqueNo}</ul>\n                  <ul>Transaction Date : {item.transactionDate}</ul>\n                  <ul>Description : {item.transactionDesc}</ul>\n                  <ul>Amount : {item.transactionAmount}</ul>\n                </li>\n            ))}\n\n            {items.map(item => (\n                <li key={item.transactionId}>\n                  <ul>Transaction ID : {item.transactionId}</ul>\n                  <ul>Transaction unique No. : {item.transactionUniqueNo}</ul>\n                  <ul>Transaction Date : {item.transactionDate}</ul>\n                  <ul>Description : {item.transactionDesc}</ul>\n                  <ul>Amount : {item.transactionAmount}</ul>\n                </li>\n            ))}\n\n          </ul>\n\n\n      );\n    }\n  }\n}\n \nexport default Summary;"]},"metadata":{},"sourceType":"module"}