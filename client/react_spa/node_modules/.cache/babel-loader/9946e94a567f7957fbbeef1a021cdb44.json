{"ast":null,"code":"import _classCallCheck from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Transactions.js\";\nimport React, { Component } from \"react\";\n\nvar Transactions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Transactions, _React$Component);\n\n  function Transactions(props) {\n    var _this;\n\n    _classCallCheck(this, Transactions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Transactions).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(Transactions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:8080/transactions/1000').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          items: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Transaction Summary\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), transactionsItems.map(function (item) {\n          return React.createElement(\"div\", {\n            class: \"table\",\n            key: item.transactionId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"tr\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"td\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, \"Transaction ID : \", item.transactionId), React.createElement(\"div\", {\n            class: \"td\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"Transaction unique No. : \", item.transactionUniqueNo), React.createElement(\"div\", {\n            class: \"td\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Transaction Date : \", item.transactionDate), React.createElement(\"div\", {\n            class: \"td\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"Description : \", item.transactionDesc), React.createElement(\"div\", {\n            class: \"td\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, \"Amount : \", item.transactionAmount)));\n        })));\n      }\n    }\n  }]);\n\n  return Transactions;\n}(React.Component);\n\nexport default Transactions;","map":{"version":3,"sources":["/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Transactions.js"],"names":["React","Component","Transactions","props","state","error","isLoaded","items","fetch","then","res","json","result","setState","message","transactionsItems","map","item","transactionId","transactionUniqueNo","transactionDate","transactionDesc","transactionAmount"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAGI,UAAAG,MAAM,EAAI;AACR,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,KAAK,EAAEK;AAFK,SAAd;AAID,OARL,EASI;AACA;AACA;AACA,gBAAAP,KAAK,EAAI;AACP,QAAA,MAAI,CAACQ,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OAjBL;AAmBD;;;6BAEQ;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,KADlB,eACkBA,KADlB;;AAEP,UAAIF,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACS,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACR,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAL,EAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjC,EACGS,iBAAiB,CAACC,GAAlB,CAAsB,UAAAC,IAAI;AAAA,iBACvB;AAAK,YAAA,KAAK,EAAC,OAAX;AAAmB,YAAA,GAAG,EAAEA,IAAI,CAACC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAkCD,IAAI,CAACC,aAAvC,CADF,EAEE;AAAK,YAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAA0CD,IAAI,CAACE,mBAA/C,CAFF,EAGE;AAAK,YAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAoCF,IAAI,CAACG,eAAzC,CAHF,EAIE;AAAK,YAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA+BH,IAAI,CAACI,eAApC,CAJF,EAKE;AAAK,YAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA0BJ,IAAI,CAACK,iBAA/B,CALF,CADF,CADuB;AAAA,SAA1B,CADH,CADF,CADF;AAiBD;AACF;;;;EAzDwBtB,KAAK,CAACC,S;;AA4DjC,eAAeC,YAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Transactions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/transactions/1000')\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <div><h2>Transaction Summary</h2><br />\n            {transactionsItems.map(item => (\n                <div class=\"table\" key={item.transactionId}>\n                  <div class=\"tr\">\n                    <div class=\"td\">Transaction ID : {item.transactionId}</div>\n                    <div class=\"td\">Transaction unique No. : {item.transactionUniqueNo}</div>\n                    <div class=\"td\">Transaction Date : {item.transactionDate}</div>\n                    <div class=\"td\">Description : {item.transactionDesc}</div>\n                    <div class=\"td\">Amount : {item.transactionAmount}</div>\n                  </div>\n                </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}