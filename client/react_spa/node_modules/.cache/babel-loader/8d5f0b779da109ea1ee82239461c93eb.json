{"ast":null,"code":"import _classCallCheck from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Invoice.js\";\nimport React, { Component } from \"react\";\nexport function createInvoicePost(event) {\n  //const data = new FormData(event.target);\n  console.log(event);\n  return fetch('http://localhost:8080/invoices/', {\n    method: 'POST',\n    body: JSON.stringify(event),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (res) {\n    return res;\n  }).catch(function (err) {\n    return err;\n  });\n}\n\nfunction validate(invoiceClientName, invoiceUniqueNo, invoiceCreationDate, invoiceAmount) {\n  // we are going to store errors for all fields\n  // in a signle array\n  var errors = [];\n\n  if (invoiceClientName.length === 0) {\n    errors.push(\"Client Name in invoice can't be empty\");\n  }\n\n  if (invoiceUniqueNo.length === 0) {\n    errors.push(\"Invoice unique Number can't be empty\");\n  }\n\n  if (invoiceCreationDate.length != 10) {\n    errors.push(\"Invoice creation date should be of format dd/MM/yyyy\");\n  }\n\n  if (invoiceAmount.length == 0) {\n    errors.push(\"Inoice Amount can't be empty\");\n  }\n\n  return errors;\n}\n\nfunction closePop() {\n  document.getElementById(\"btn_create_invoice_close\").click();\n}\n\nvar Popup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popup, _React$Component);\n\n  function Popup() {\n    var _this;\n\n    _classCallCheck(this, Popup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popup).call(this));\n    _this.state = {\n      invoiceClientName: \"\",\n      invoiceUniqueNo: \"\",\n      invoiceCreationDate: \"\",\n      invoiceAmount: \"\",\n      invoiceStatus: \"\",\n      errors: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      //e.preventDefault();\n      var _this$state = this.state,\n          invoiceClientName = _this$state.invoiceClientName,\n          invoiceUniqueNo = _this$state.invoiceUniqueNo,\n          invoiceCreationDate = _this$state.invoiceCreationDate,\n          invoiceAmount = _this$state.invoiceAmount;\n      var errors = validate(invoiceClientName, invoiceUniqueNo, invoiceCreationDate, invoiceAmount);\n\n      if (errors.length > 0) {\n        this.setState({\n          errors: errors\n        });\n        return;\n      } // submit the data...\n      // calling the post api\n\n\n      createInvoicePost(this.state);\n      closePop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.props.text), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, errors.map(function (error) {\n        return React.createElement(\"p\", {\n          key: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Error: \", error);\n      }), React.createElement(\"label\", {\n        htmlFor: \"userId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" User Id : \"), React.createElement(\"input\", {\n        value: this.state.userId,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            userId: evt.target.value\n          });\n        },\n        type: \"text\",\n        placeholder: \"userId\",\n        id: \"userId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"invoiceClientName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \" Invoice Client name : \"), React.createElement(\"input\", {\n        value: this.state.invoiceClientName,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            invoiceClientName: evt.target.value\n          });\n        },\n        type: \"text\",\n        placeholder: \"invoiceClientName\",\n        id: \"invoiceClientName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"invoiceUniqueNo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Invoice Unique No.: \"), React.createElement(\"input\", {\n        value: this.state.invoiceUniqueNo,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            invoiceUniqueNo: evt.target.value\n          });\n        },\n        type: \"text\",\n        placeholder: \"invoiceUniqueNo\",\n        id: \"invoiceUniqueNo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"invoiceCreationDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Invoice Creation date (dd/MM/yyyy) : \"), React.createElement(\"input\", {\n        value: this.state.invoiceCreationDate,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            invoiceCreationDate: evt.target.value\n          });\n        },\n        type: \"text\",\n        placeholder: \"invoiceCreationDate\",\n        id: \"invoiceCreationDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"invoiceAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Invoice Amount : \"), React.createElement(\"input\", {\n        value: this.state.invoiceAmount,\n        onChange: function onChange(evt) {\n          return _this2.setState({\n            invoiceAmount: evt.target.value\n          });\n        },\n        type: \"text\",\n        placeholder: \"invoiceAmount\",\n        id: \"invoiceAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"create_invoice\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Create New Invoice\"), React.createElement(\"button\", {\n        id: \"btn_create_invoice_close\",\n        type: \"button\",\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Close\")))));\n    }\n  }]);\n\n  return Popup;\n}(React.Component);\n\nvar Invoice =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Invoice, _React$Component2);\n\n  function Invoice(props) {\n    var _this3;\n\n    _classCallCheck(this, Invoice);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Invoice).call(this, props));\n    _this3.state = {\n      showPopup: false,\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    return _this3;\n  }\n\n  _createClass(Invoice, [{\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      fetch(\"http://localhost:8080/invoices/1000\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this4.setState({\n          isLoaded: true,\n          items: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this4.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          error = _this$state2.error,\n          isLoaded = _this$state2.isLoaded,\n          items = _this$state2.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.togglePopup.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, \"Create New Invoice\")), this.state.showPopup ? React.createElement(Popup, {\n          text: \"Create New Invoice\",\n          closePopup: this.togglePopup.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }) : null, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, items.map(function (item) {\n          return React.createElement(\"li\", {\n            key: item.invoiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, \"Invoice ID : \", item.invoiceId), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, \"Client name : \", item.invoiceClientName), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, \"Creation Date : \", item.invoiceCreationDate), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, \"Invoice Unique ID : \", item.invoiceUniqueNo), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, \"Invoice Creation Date : \", item.invoiceCreationDate), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, \"Amount : \", item.invoiceAmount), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, \"Status : \", item.invoiceStatus), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }));\n        })));\n      }\n    }\n  }]);\n\n  return Invoice;\n}(React.Component);\n\nexport default Invoice;","map":{"version":3,"sources":["/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Invoice.js"],"names":["React","Component","createInvoicePost","event","console","log","fetch","method","body","JSON","stringify","headers","then","res","catch","err","validate","invoiceClientName","invoiceUniqueNo","invoiceCreationDate","invoiceAmount","errors","length","push","closePop","document","getElementById","click","Popup","state","invoiceStatus","handleSubmit","bind","setState","showPopup","e","props","text","map","error","userId","evt","target","value","closePopup","Invoice","isLoaded","items","json","result","message","togglePopup","item","invoiceId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n \n\nexport function createInvoicePost(event) {\n    //const data = new FormData(event.target);\n    console.log(event);\n    return fetch('http://localhost:8080/invoices/', {\n        method: 'POST',\n        body: JSON.stringify(event),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    }).then(res => {\n        return res;\n    }).catch(err => err);\n}\n\n\nfunction validate(invoiceClientName, invoiceUniqueNo, invoiceCreationDate, invoiceAmount) {\n  // we are going to store errors for all fields\n  // in a signle array\n  const errors = [];\n\n  if (invoiceClientName.length === 0) {\n    errors.push(\"Client Name in invoice can't be empty\");\n  }\n\n  if (invoiceUniqueNo.length === 0) {\n    errors.push(\"Invoice unique Number can't be empty\");\n  }\n\n  if (invoiceCreationDate.length != 10) {\n    errors.push(\"Invoice creation date should be of format dd/MM/yyyy\");\n  }\n\n  if (invoiceAmount.length == 0) {\n    errors.push(\"Inoice Amount can't be empty\");\n  }\n\n  return errors;\n}\n\nfunction closePop() {\n    document.getElementById(\"btn_create_invoice_close\").click();\n}\n\n\nclass Popup extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      invoiceClientName: \"\",\n      invoiceUniqueNo: \"\",\n      invoiceCreationDate: \"\",\n      invoiceAmount: \"\",\n      invoiceStatus: \"\",\n\n      errors: []\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n\n\n  handleSubmit(e) {\n    //e.preventDefault();\n\n    const { invoiceClientName, invoiceUniqueNo, invoiceCreationDate, invoiceAmount } = this.state;\n\n    const errors = validate(invoiceClientName, invoiceUniqueNo, invoiceCreationDate, invoiceAmount);\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    // submit the data...\n    // calling the post api\n    createInvoicePost(this.state);\n    closePop();\n  }\n\n    render() {\n    const { errors } = this.state;\n    return (\n      <div className='popup'>\n        <div className='popup_inner'>\n          <h1>{this.props.text}</h1>\n\n         <form onSubmit={this.handleSubmit}>\n          {errors.map(error => (\n          <p key={error}>Error: {error}</p>\n          ))}\n\n          <label htmlFor=\"userId\"> User Id : </label>\n        <input value={this.state.userId}\n          onChange={evt => this.setState({ userId: evt.target.value })}\n          type=\"text\"\n          placeholder=\"userId\" id=\"userId\"/>   \n          <br/>\n\n          <label htmlFor=\"invoiceClientName\"> Invoice Client name : </label>\n        <input value={this.state.invoiceClientName}\n          onChange={evt => this.setState({ invoiceClientName: evt.target.value })}\n          type=\"text\"\n          placeholder=\"invoiceClientName\" id=\"invoiceClientName\"/> \n          <br/>\n\n          <label htmlFor=\"invoiceUniqueNo\">Invoice Unique No.: </label>\n        <input value={this.state.invoiceUniqueNo}\n          onChange={evt => this.setState({ invoiceUniqueNo: evt.target.value })}\n          type=\"text\"\n          placeholder=\"invoiceUniqueNo\" id=\"invoiceUniqueNo\"/>\n          <br/>\n\n          <label htmlFor=\"invoiceCreationDate\">Invoice Creation date (dd/MM/yyyy) : </label>\n        <input value={this.state.invoiceCreationDate}\n          onChange={evt => this.setState({ invoiceCreationDate: evt.target.value })}\n          type=\"text\"\n          placeholder=\"invoiceCreationDate\" id=\"invoiceCreationDate\"/>\n          <br/>\n\n          <label htmlFor=\"invoiceAmount\">Invoice Amount : </label>\n        <input value={this.state.invoiceAmount}\n          onChange={evt => this.setState({ invoiceAmount: evt.target.value })}\n          type=\"text\"\n          placeholder=\"invoiceAmount\" id=\"invoiceAmount\"/>\n          <br/>\n\n\n        <center><button id=\"create_invoice\" type=\"submit\">Create New Invoice</button>\n        <button id=\"btn_create_invoice_close\" type=\"button\" onClick={this.props.closePopup}>Close</button></center>\n      </form>\n\n        \n        </div>\n      </div>\n    );\n  }\n}\n\nclass Invoice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPopup: false,\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  togglePopup() {\n      this.setState({\n      showPopup: !this.state.showPopup\n      });\n    }\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/invoices/1000\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n            <center>\n                <button onClick={this.togglePopup.bind(this)}>Create New Invoice</button>\n            </center>\n\n            {this.state.showPopup ? <Popup text='Create New Invoice' closePopup={this.togglePopup.bind(this)}/>: null}\n\n          <ul>{items.map(item => (\n              <li key={item.invoiceId}>\n                <ul>Invoice ID : {item.invoiceId}</ul>\n                <ul>Client name : {item.invoiceClientName}</ul>\n                <ul>Creation Date : {item.invoiceCreationDate}</ul>\n                <ul>Invoice Unique ID : {item.invoiceUniqueNo}</ul>\n                <ul>Invoice Creation Date : {item.invoiceCreationDate}</ul>\n                <ul>Amount : {item.invoiceAmount}</ul>\n                <ul>Status : {item.invoiceStatus}</ul><br/>\n            </li>\n          ))}\n          </ul>\n\n        </div> \n      );\n    }\n  }\n}\n\n \nexport default Invoice;\n"]},"metadata":{},"sourceType":"module"}