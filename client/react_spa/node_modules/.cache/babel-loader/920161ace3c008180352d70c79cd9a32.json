{"ast":null,"code":"import _classCallCheck from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Transactions.js\";\nimport React, { Component } from \"react\";\n\nvar Transactions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Transactions, _React$Component);\n\n  function Transactions(props) {\n    var _this;\n\n    _classCallCheck(this, Transactions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Transactions).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(Transactions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch(\"http://localhost:8080/transactions/1000\", {\n        mode: 'no-cors',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(console.log(res));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, items.map(function (item) {\n          return React.createElement(\"li\", {\n            key: item.transactionId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, \"Transaction ID : \", item.transactionId), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \"Transaction unique No. : \", item.transactionUniqueNo), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, \"Transaction Date : \", item.transactionDate), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"Description : \", item.transactionDesc), React.createElement(\"ul\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \"Amount : \", item.transactionAmount));\n        }), \";\");\n      }\n    }\n  }]);\n\n  return Transactions;\n}(React.Component);\n\nexport default Transactions;","map":{"version":3,"sources":["/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Transactions.js"],"names":["React","Component","Transactions","props","state","error","isLoaded","items","fetch","mode","credentials","headers","then","res","json","console","log","message","map","item","transactionId","transactionUniqueNo","transactionDate","transactionDesc","transactionAmount"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAClBC,MAAAA,KAAK,CAAC,yCAAD,EAA2C;AAACC,QAAAA,IAAI,EAAC,SAAN;AAAiBC,QAAAA,WAAW,EAAE,SAA9B;AAAyCC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAAlD,OAA3C,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQG,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAFR;AAID;;;6BAEQ;AAAA,wBAC4B,KAAKT,KADjC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,KADlB,eACkBA,KADlB;;AAEP,UAAIF,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACY,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,KAAK,CAACW,GAAN,CAAU,UAAAC,IAAI;AAAA,iBACb;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAsBD,IAAI,CAACC,aAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAA8BD,IAAI,CAACE,mBAAnC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAwBF,IAAI,CAACG,eAA7B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAmBH,IAAI,CAACI,eAAxB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAcJ,IAAI,CAACK,iBAAnB,CALF,CADa;AAAA,SAAd,CADH,MADF;AAaD;AACF;;;;EAtCwBxB,KAAK,CAACC,S;;AAyCjC,eAAeC,YAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Transactions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/transactions/1000\",{mode:'no-cors', credentials: 'include', headers: {'Content-Type': 'application/json'}})\n      .then(res => res.json())\n      .then(console.log(res))\n\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {items.map(item => (\n            <li key={item.transactionId}>\n              <ul>Transaction ID : {item.transactionId}</ul>\n              <ul>Transaction unique No. : {item.transactionUniqueNo}</ul>\n              <ul>Transaction Date : {item.transactionDate}</ul>\n              <ul>Description : {item.transactionDesc}</ul>\n              <ul>Amount : {item.transactionAmount}</ul>\n            </li>\n          ))};\n        </ul>\n      );\n    }\n  }\n}\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}