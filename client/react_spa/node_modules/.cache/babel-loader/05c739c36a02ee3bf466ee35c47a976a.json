{"ast":null,"code":"import _classCallCheck from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Summary.js\";\nimport React, { Component } from \"react\";\n\nvar Summary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Summary, _Component);\n\n  function Summary(props) {\n    var _this;\n\n    _classCallCheck(this, Summary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Summary).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      invoiceItems: [],\n      transactionsItems: [],\n      accountItems: []\n    };\n    return _this;\n  }\n\n  _createClass(Summary, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Fetch transactionSummary\n      fetch('http://localhost:8080/transactionsSummary/1000').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          transactionsItems: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      }); // Get Invoice Summary\n\n      fetch('http://localhost:8080/invoiceSummary/1000').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          invoiceItems: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      }); // Get account summary\n\n      fetch('http://localhost:8080/accountSummary/1000').then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          accountItems: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          invoiceItems = _this$state.invoiceItems,\n          transactionsItems = _this$state.transactionsItems,\n          accountItems = _this$state.accountItems;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Total Amount\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          class: \"table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"tr\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Total Amount : \", React.createElement(\"font\", {\n          style: {\n            color: accountItems.displayColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, accountItems.totalAmount)), React.createElement(\"div\", {\n          class: \"td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Threshold amount Set : \", accountItems.threshold)))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Transaction Summary\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), transactionsItems.map(function (item) {\n          return React.createElement(\"div\", {\n            class: \"rTable\",\n            key: item.transactionId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"rTableRow\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, \"Transaction ID : \", item.transactionId), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, \"Transaction unique No. : \", item.transactionUniqueNo), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, \"Transaction Date : \", item.transactionDate), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, \"Description : \", item.transactionDesc), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \"Amount : \", item.transactionAmount)));\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Invoice Summary\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), invoiceItems.map(function (item) {\n          return React.createElement(\"div\", {\n            class: \"rTable\",\n            key: item.invoiceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"rTableRow\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"Invoice ID : \", item.invoiceId), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Client name : \", item.invoiceClientName), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, \"Creation Date : \", item.invoiceCreationDate), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, \"Invoice Unique ID : \", item.invoiceUniqueNo), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, \"Invoice Creation Date : \", item.invoiceCreationDate), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, \"Amount : \", item.invoiceAmount), React.createElement(\"div\", {\n            class: \"rTableHead\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"Status : \", item.invoiceStatus), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          })));\n        })));\n      }\n    }\n  }]);\n\n  return Summary;\n}(Component);\n\nexport default Summary;","map":{"version":3,"sources":["/Users/nmehta/Desktop/Project/payRollApplication/react_spa/src/Summary.js"],"names":["React","Component","Summary","props","state","error","isLoaded","invoiceItems","transactionsItems","accountItems","fetch","then","res","json","result","setState","message","color","displayColor","totalAmount","threshold","map","item","transactionId","transactionUniqueNo","transactionDate","transactionDesc","transactionAmount","invoiceId","invoiceClientName","invoiceCreationDate","invoiceUniqueNo","invoiceAmount","invoiceStatus"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n \nclass Summary extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      invoiceItems: [],\n      transactionsItems: [],\n      accountItems: []\n    };\n  }\n\n  componentDidMount() {\n    // Fetch transactionSummary\n    fetch('http://localhost:8080/transactionsSummary/1000')\n        .then(res => res.json())\n        .then(\n            result => {\n              this.setState({\n                isLoaded: true,\n                transactionsItems: result\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n        );\n\n    // Get Invoice Summary\n    fetch('http://localhost:8080/invoiceSummary/1000')\n        .then(res => res.json())\n        .then(\n            result => {\n              this.setState({\n                isLoaded: true,\n                invoiceItems: result\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n        );\n\n    // Get account summary\n    fetch('http://localhost:8080/accountSummary/1000')\n        .then(res => res.json())\n        .then(\n            result => {\n              this.setState({\n                isLoaded: true,\n                accountItems: result\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n        );\n\n\n  }\n\n  render() {\n    const { error, isLoaded, invoiceItems, transactionsItems, accountItems } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n          <div>\n\n            <div><h2>Total Amount</h2><br />\n                  <div class=\"table\">\n                    <div class=\"tr\">\n                      <div class=\"td\">Total Amount : <font style={{color: accountItems.displayColor}} >{accountItems.totalAmount}</font></div>\n                      <div class=\"td\">Threshold amount Set : {accountItems.threshold}</div>\n                    </div>\n                  </div>\n            </div>\n\n            <br /><br />\n\n            <div><h2>Transaction Summary</h2><br />\n              {transactionsItems.map(item => (\n                  <div class=\"rTable\" key={item.transactionId}>\n                    <div class=\"rTableRow\">\n                      <div class=\"rTableHead\">Transaction ID : {item.transactionId}</div>\n                      <div class=\"rTableHead\">Transaction unique No. : {item.transactionUniqueNo}</div>\n                      <div class=\"rTableHead\">Transaction Date : {item.transactionDate}</div>\n                      <div class=\"rTableHead\">Description : {item.transactionDesc}</div>\n                      <div class=\"rTableHead\">Amount : {item.transactionAmount}</div>\n                    </div>\n                  </div>\n              ))}\n            </div>\n\n            <br /><br />\n\n            <div><h2>Invoice Summary</h2><br />\n              {invoiceItems.map(item => (\n                <div class=\"rTable\" key={item.invoiceId}>\n                  <div class=\"rTableRow\">\n                    <div class=\"rTableHead\">Invoice ID : {item.invoiceId}</div>\n                    <div class=\"rTableHead\">Client name : {item.invoiceClientName}</div>\n                    <div class=\"rTableHead\">Creation Date : {item.invoiceCreationDate}</div>\n                    <div class=\"rTableHead\">Invoice Unique ID : {item.invoiceUniqueNo}</div>\n                    <div class=\"rTableHead\">Invoice Creation Date : {item.invoiceCreationDate}</div>\n                    <div class=\"rTableHead\">Amount : {item.invoiceAmount}</div>\n                    <div class=\"rTableHead\">Status : {item.invoiceStatus}</div>\n                    <br />\n                  </div>\n                </div>\n            ))}\n            </div>\n          </div>\n\n      );\n    }\n  }\n}\n \nexport default Summary;"]},"metadata":{},"sourceType":"module"}